{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../core/auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction HeaderComponent_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7)(1, \"a\", 11);\n    i0.ɵɵtext(2, \"Sign In\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction HeaderComponent_li_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 7)(1, \"a\", 12);\n    i0.ɵɵtext(2, \"Register\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction HeaderComponent_li_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 7)(1, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function HeaderComponent_li_16_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.logout());\n    });\n    i0.ɵɵtext(2, \" Logout \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class HeaderComponent {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  isLoggedIn() {\n    return this.authService.isLoggedIn();\n  }\n  logout() {\n    this.authService.logout();\n  }\n}\nHeaderComponent.ɵfac = function HeaderComponent_Factory(t) {\n  return new (t || HeaderComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HeaderComponent,\n  selectors: [[\"app-header\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [1, \"container\"], [\"routerLink\", \"/\", 1, \"navbar-brand\"], [\"type\", \"button\", \"data-bs-toggle\", \"collapse\", \"data-bs-target\", \"#navbarNav\", \"aria-controls\", \"navbarNav\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarNav\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"ms-auto\"], [1, \"nav-item\"], [\"routerLink\", \"/inventory\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [\"routerLink\", \"/about\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [\"class\", \"nav-item\", 4, \"ngIf\"], [\"routerLink\", \"/auth/sign-in\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [\"routerLink\", \"/auth/register\", \"routerLinkActive\", \"active\", 1, \"nav-link\"], [\"role\", \"button\", 1, \"btn\", \"btn-outline-light\", \"ms-2\", 3, \"click\"]],\n  template: function HeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"div\", 1)(2, \"a\", 2);\n      i0.ɵɵtext(3, \"Products Inventory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵelement(5, \"span\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"ul\", 6)(8, \"li\", 7)(9, \"a\", 8);\n      i0.ɵɵtext(10, \"Products\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"li\", 7)(12, \"a\", 9);\n      i0.ɵɵtext(13, \"About\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(14, HeaderComponent_li_14_Template, 3, 0, \"li\", 10);\n      i0.ɵɵtemplate(15, HeaderComponent_li_15_Template, 3, 0, \"li\", 10);\n      i0.ɵɵtemplate(16, HeaderComponent_li_16_Template, 3, 0, \"li\", 10);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(14);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoggedIn());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoggedIn());\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterLink, i3.RouterLinkActive],\n  styles: [\".navbar[_ngcontent-%COMP%] {\\r\\n    font-family: 'Poppins', sans-serif;\\r\\n}\\r\\n\\r\\n.navbar-brand[_ngcontent-%COMP%] {\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\n.nav-link[_ngcontent-%COMP%] {\\r\\n    font-size: 16px;\\r\\n}\\r\\n\\r\\n.btn-danger[_ngcontent-%COMP%] {\\r\\n    font-size: 14px;\\r\\n    padding: 5px 10px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2hhcmVkL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtDQUFrQztBQUN0Qzs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLm5hdmJhciB7XHJcbiAgICBmb250LWZhbWlseTogJ1BvcHBpbnMnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4ubmF2YmFyLWJyYW5kIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4ubmF2LWxpbmsge1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG59XHJcblxyXG4uYnRuLWRhbmdlciB7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBwYWRkaW5nOiA1cHggMTBweDtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;;IAsBgBA,6BAA2C;IACkCA,uBAAO;IAAAA,iBAAI;;;;;IAExFA,6BAA2C;IACmCA,wBAAQ;IAAAA,iBAAI;;;;;;IAI1FA,6BAA0C;IACKA;MAAAA;MAAA;MAAA,OAASA,8BAAQ;IAAA,EAAC;IACzDA,wBACJ;IAAAA,iBAAS;;;ACzB7B,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;EAAiB;EAEhDC,UAAU;IACR,OAAO,IAAI,CAACD,WAAW,CAACC,UAAU,EAAE;EACtC;EAEAC,MAAM;IACJ,IAAI,CAACF,WAAW,CAACE,MAAM,EAAE;EAC3B;;AATWJ,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAK;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR5BV,8BAAyD;MAGVA,kCAAkB;MAAAA,iBAAI;MAG7DA,iCACmF;MAC/EA,0BAAyC;MAC7CA,iBAAS;MAGTA,8BAAqD;MAG6BA,yBAAQ;MAAAA,iBAAI;MAEtFA,8BAAqB;MACiDA,sBAAK;MAAAA,iBAAI;MAI/EA,iEAEK;MACLA,iEAEK;MAGLA,iEAIK;MACTA,iBAAK;;;MAbqBA,gBAAmB;MAAnBA,wCAAmB;MAGnBA,eAAmB;MAAnBA,wCAAmB;MAKnBA,eAAkB;MAAlBA,uCAAkB","names":["i0","HeaderComponent","constructor","authService","isLoggedIn","logout","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\yalla\\OneDrive\\Documents\\New folder\\Angular-Product-Inventory-Management-Solution-main\\src\\app\\shared\\header\\header.component.html","C:\\Users\\yalla\\OneDrive\\Documents\\New folder\\Angular-Product-Inventory-Management-Solution-main\\src\\app\\shared\\header\\header.component.ts"],"sourcesContent":["<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container\">\n        <!-- Navbar Brand -->\n        <a class=\"navbar-brand\" routerLink=\"/\">Products Inventory</a>\n\n        <!-- Navbar Toggle Button (Mobile Responsive) -->\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" \n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <!-- Navbar Links -->\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav ms-auto\">\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/inventory\" routerLinkActive=\"active\">Products</a>\n                </li>\n                <li class=\"nav-item\">\n                    <a class=\"nav-link\" routerLink=\"/about\" routerLinkActive=\"active\">About</a>\n                </li>\n\n                <!-- Show only if user is NOT logged in -->\n                <li class=\"nav-item\" *ngIf=\"!isLoggedIn()\">\n                    <a class=\"nav-link\" routerLink=\"/auth/sign-in\" routerLinkActive=\"active\">Sign In</a>\n                </li>\n                <li class=\"nav-item\" *ngIf=\"!isLoggedIn()\">\n                    <a class=\"nav-link\" routerLink=\"/auth/register\" routerLinkActive=\"active\">Register</a>\n                </li>\n\n                <!-- Show only if user IS logged in -->\n                <li class=\"nav-item\" *ngIf=\"isLoggedIn()\">\n                    <button class=\"btn btn-outline-light ms-2\" (click)=\"logout()\" role=\"button\">\n                        Logout\n                    </button>\n                </li>\n            </ul>\n        </div>\n    </div>\n</nav>\n","import { Component } from '@angular/core';\nimport { AuthService } from '../../core/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n  constructor(private authService: AuthService) { }\n\n  isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  logout(): void {\n    this.authService.logout();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}